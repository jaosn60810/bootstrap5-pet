import{_ as i,T as g,r as a,o as l,c as n,a as s,w as b,b as c,d as u,F as v}from"./index.35457b21.js";var f="./assets/home.dd6ffa2a.png",_="./assets/home_mobile.5e11a983.png";const w={data(){return{tooltipList:null}},mounted(){const o=document.querySelectorAll('[data-bs-toggle="tooltip"]');this.tooltipList=[...o].map(e=>new g(e))},unmounted(){this.tooltipList.forEach(o=>{o.dispose()})}},y=c('<div class="position-relative"><img src="'+f+'" alt="home image" class="img-fluid d-none d-lg-block w-100"><img src="'+_+'" alt="home image" class="img-fluid d-lg-none w-100"><h1 class="d-none">\u64BF\u5230\u5BF6</h1><h2 class="fw-bold display-3 fontKalam colorBitter textShadow position-absolute top-50 start-50 translate-middle mb-0 d-none d-lg-block"> Full of fur. Full of love </h2></div>',1),x=u("div",{class:"fixedBottomBtn__img","data-bs-toggle":"tooltip","data-bs-placement":"top",title:"\u5BA2\u88FD\u6211\u7684\u6BDB\u5B69\u5716"},null,-1);function S(o,e,d,r,h,p){const t=a("router-link");return l(),n("header",null,[y,s(t,{to:"/Services",class:"fixed-bottom fixedBottomBtn me-8 d-none d-lg-block"},{default:b(()=>[x]),_:1})])}var T=i(w,[["render",S]]),$="./assets/home01.7b9ec5a2.png";const I={},B={class:"py-6 py-lg-11"},C=c('<div class="container"><div class="row row-cols-1 row-cols-lg-2 justify-content-center gx-lg-7 flex-column-reverse flex-lg-row"><div class="col"><img src="'+$+'" alt="home01" class="img-fluid"></div><div class="col mb-5 mb-lg-0"><div class="w-lg-75 h-100 d-flex flex-column justify-content-center"><h3 class="fontKalam fw-bold text-primary text-center text-lg-start h4 lh-base mb-0"> Service </h3><h2 class="fw-bold lh-base text-center text-lg-start mb-4 mb-lg-2"> \u60A8\u51FA\u9322 \u6211\u51FA\u529B \u4E00\u8D77\u52A9\u6D6A\u6D6A </h2><p class="lh-lg mb-0"> \u6211\u5011\u662F\u4E00\u7FA4\u8C93\u5974\u624D\u72D7\u5974\u624D\uFF0C \u5E0C\u671B\u80FD\u900F\u904E\u81EA\u5DF1\u5C0F\u5C0F\u7684\u529B\u91CF\u5E6B\u52A9\u6D6A\u8C93\u6D6A\u72D7\u5011\uFF0C \u53EF\u6211\u5011\u6C92\u4EC0\u9EBC\u9322\u9322\uFF0C\u4F46\u6211\u5011\u559C\u6B61\u756B\u756B\u3001\u559C\u611B\u8C93\u72D7\uFF0C \u65BC\u662F\u60F3\u5230\u500B\u5169\u5168\u5176\u7F8E\u7684\u597D\u6CD5\u5B50\uFF01 \u5982\u679C\u60A8\u8CFC\u8CB7\u6211\u5011\u7684\u5BF5\u7269\u4F3C\u984F\u7E6A\u670D\u52D9\uFF0C \u6211\u5011\u5C07\u6703\u628A\u8A2D\u8A08\u8CBB100%\u5168\u6578\u6350\u7D66\u6D6A\u6D6A\u5011\uFF01 \u60A8\u51FA\u9322\uFF0C\u6211\u51FA\u529B\uFF0C\u5408\u4F5C\u7121\u9593\u8B93\u6D6A\u6D6A\u6709\u98EF\u5403\uFF0C\u8B9A\u5566\uFF01 </p></div></div></div></div>',1),k=[C];function H(o,e,d,r,h,p){return l(),n("section",B,k)}var L=i(I,[["render",H]]);const E={components:{Header:T,ServiceSection:L}},j=c('<div class="accordion" id="accordionExample"><div class="accordion-item"><h2 class="accordion-header" id="headingOne"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne"> Accordion Item #1 </button></h2><div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingTwo"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"> Accordion Item #2 </button></h2><div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the second item&#39;s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingThree"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree"> Accordion Item #3 </button></h2><div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the third item&#39;s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div></div>',1);function O(o,e,d,r,h,p){const t=a("Header"),m=a("ServiceSection");return l(),n(v,null,[s(t),u("main",null,[s(m)]),j],64)}var F=i(E,[["render",O]]);export{F as default};
